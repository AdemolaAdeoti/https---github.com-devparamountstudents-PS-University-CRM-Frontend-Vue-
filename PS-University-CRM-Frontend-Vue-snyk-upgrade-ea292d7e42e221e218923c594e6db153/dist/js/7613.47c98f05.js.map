{"version":3,"file":"js/7613.47c98f05.js","mappings":"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","sources":["webpack://university_crm/./src/views/settings/Signature.vue","webpack://university_crm/./src/views/settings/Signature.vue?211d"],"sourcesContent":["<template>\r\n  <div class=\"px-3 row\">\r\n    <div class=\"offset-md-2 col-md-8\">\r\n      <div class=\"d-flex mb-3 row\">\r\n        <div class=\"col-md-6\">\r\n          <h4>Sign Here</h4>\r\n          <div id=\"parentDiv\" class=\"border\" ref=\"signatureCanvas\" width=\"100%\" height=\"200\"></div>\r\n        </div>      \r\n        <div class=\"col-md-6 mb-3 \" >\r\n          <h4 >Output</h4>          \r\n          <div class=\"border\" style=\"width:100%;height:200px\">\r\n            <img ref=\"signature\" src=\"\" alt=\"\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        class=\"btn btn-sm d-inline-block mx-1 btn-warning\"\r\n        @click=\"clearSignature\"\r\n      >\r\n        Clear\r\n      </button>\r\n      <button\r\n        class=\"btn btn-sm d-inline-block mx-1 btn-warning\"\r\n        @click=\"captureSignature\"\r\n      >\r\n        Capture Signature\r\n      </button>\r\n    </div>\r\n    <div class=\"col-md-2\"></div>\r\n    <div class=\"col-md-12\">\r\n      <center>\r\n        <button @click=\"useSignature\" class=\"btn mx-auto d-inline  btn-warning mt-5\">Use Signature</button>\r\n      </center>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport p5 from \"p5\";\r\nimport { useUserStore } from \"@/stores/user\";\r\nvar sketch = null;\r\nexport default {\r\n  name: \"signatureView\",\r\n  data() {\r\n    return {\r\n        store:useUserStore(),\r\n        signUrl:null,\r\n    };\r\n  },\r\n  methods: {\r\n    useSignature(){\r\n      this.$emit('getSign', this.signUrl)\r\n    },\r\n    initializeCanvas() {\r\n      sketch = new p5(this.drawSignature, this.$refs.signatureCanvas);\r\n    },\r\n    drawSignature(p) {\r\n      let drawing = false;\r\n      let lastX = 0;\r\n      let lastY = 0;\r\n\r\n      p.setup = () => {\r\n        const parentDiv = document.getElementById('parentDiv'); // Replace 'parentDiv' with the actual ID of the parent div\r\n        p.createCanvas(parentDiv.clientWidth, 200);\r\n        p.frameRate(3);\r\n        p.strokeWeight(2);\r\n        p.noFill();\r\n        p.background(255);\r\n      };\r\n\r\n      p.mousePressed = () => {\r\n        drawing = true;\r\n        lastX = p.mouseX;\r\n        lastY = p.mouseY;\r\n      };\r\n\r\n      p.mouseReleased = () => {\r\n        drawing = false;\r\n      };\r\n      p.touchMoved = () => {\r\n        p.line(p.mouseX, p.mouseY, lastX, lastY);\r\n        lastX = p.mouseX;\r\n        lastY = p.mouseY;\r\n        return false;\r\n      };\r\n      p.draw = () => {\r\n        if (drawing) {\r\n          p.line(lastX, lastY, p.mouseX, p.mouseY);\r\n          lastX = p.mouseX;\r\n          lastY = p.mouseY;\r\n          return false;\r\n        }\r\n      };\r\n    },\r\n    clearSignature() {\r\n      sketch.clear();\r\n      sketch.background(255);\r\n    },\r\n    getSignatureData() {\r\n      return this.$refs.signatureCanvas.toDataURL();\r\n    },\r\n    captureSignature() {         \r\n        const myImage = new Image();\r\n        myImage.crossOrigin = \"Anonymous\";\r\n        this.store.isLoading = true;            \r\n        const canvas = this.$refs.signatureCanvas.getElementsByTagName('canvas')[0];\r\n        const context = canvas.getContext(\"2d\");\r\n        myImage.onload = () => {\r\n            // Create an offscreen canvas to capture the image\r\n            \r\n            canvas.width = myImage.width;\r\n            canvas.height = myImage.height;\r\n            \r\n            // Draw the image on the offscreen canvas\r\n            context.drawImage(myImage, 0, 0);\r\n            \r\n            // Remove blanks and get cropped image data\r\n            const croppedImageData = this.removeImageBlanks(canvas);\r\n            console.log(\"Cropped Image Data:\", croppedImageData);\r\n            this.$refs.signature.src = croppedImageData\r\n            this.signUrl =croppedImageData\r\n            this.store.isLoading = false;\r\n        };        \r\n        myImage.src = canvas.toDataURL();\r\n    },    \r\n    removeImageBlanks(imageObject) {\r\n        let imgWidth = imageObject.width;\r\n        let imgHeight = imageObject.height;\r\n        var canvas = document.createElement('canvas');\r\n        canvas.setAttribute(\"width\", imgWidth);\r\n        canvas.setAttribute(\"height\", imgHeight);\r\n        var context = canvas.getContext('2d');\r\n        context.drawImage(imageObject, 0, 0);\r\n\r\n       var imageData = context.getImageData(0, 0, imgWidth, imgHeight),\r\n        data = imageData.data,\r\n        getRBG = function(x, y) {\r\n            var offset = imgWidth * y + x;\r\n            return {\r\n                red:     data[offset * 4],\r\n                green:   data[offset * 4 + 1],\r\n                blue:    data[offset * 4 + 2],\r\n                opacity: data[offset * 4 + 3]\r\n            };\r\n        },\r\n        isWhite = function (rgb) {\r\n            // many images contain noise, as the white is not a pure #fff white\r\n            return rgb.red > 200 && rgb.green > 200 && rgb.blue > 200;\r\n        },\r\n                scanY = function (fromTop) {\r\n        var offset = fromTop ? 1 : -1;\r\n\r\n        // loop through each row\r\n        for(var y = fromTop ? 0 : imgHeight - 1; fromTop ? (y < imgHeight) : (y > -1); y += offset) {\r\n\r\n            // loop through each column\r\n            for(var x = 0; x < imgWidth; x++) {\r\n                var rgb = getRBG(x, y);\r\n                if (!isWhite(rgb)) {\r\n                    if (fromTop) {\r\n                        return y;\r\n                    } else {\r\n                        return Math.min(y + 1, imgHeight);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null; // all image is white\r\n    },\r\n    scanX = function (fromLeft) {\r\n        var offset = fromLeft? 1 : -1;\r\n\r\n        // loop through each column\r\n        for(var x = fromLeft ? 0 : imgWidth - 1; fromLeft ? (x < imgWidth) : (x > -1); x += offset) {\r\n\r\n            // loop through each row\r\n            for(var y = 0; y < imgHeight; y++) {\r\n                var rgb = getRBG(x, y);\r\n                if (!isWhite(rgb)) {\r\n                    if (fromLeft) {\r\n                        return x;\r\n                    } else {\r\n                        return Math.min(x + 1, imgWidth);\r\n                    }\r\n                }      \r\n            }\r\n        }\r\n        return null; // all image is white\r\n    };\r\n\r\n    var cropTop = scanY(true),\r\n        cropBottom = scanY(false),\r\n        cropLeft = scanX(true),\r\n        cropRight = scanX(false),\r\n        cropWidth = cropRight - cropLeft,\r\n        cropHeight = cropBottom - cropTop;\r\n\r\n    canvas.setAttribute(\"width\", cropWidth);\r\n    canvas.setAttribute(\"height\", cropHeight);\r\n    // finally crop the guy\r\n    canvas.getContext(\"2d\").drawImage(imageObject,\r\n        cropLeft, cropTop, cropWidth, cropHeight,\r\n        0, 0, cropWidth * 0.50, cropHeight * 0.50);\r\n\r\n    return canvas.toDataURL();\r\n} \r\n  },\r\n  mounted() {\r\n    this.initializeCanvas();\r\n  },\r\n};\r\n</script>\r\n  ","import { render } from \"./Signature.vue?vue&type=template&id=79c8e1a0\"\nimport script from \"./Signature.vue?vue&type=script&lang=js\"\nexport * from \"./Signature.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","id","ref","width","height","style","src","alt","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","onClick","_cache","args","$options","clearSignature","captureSignature","_hoisted_11","_hoisted_12","_createVNode","_component_center","useSignature","sketch","name","data","store","useUserStore","signUrl","methods","this","$emit","initializeCanvas","p5","drawSignature","$refs","signatureCanvas","p","drawing","lastX","lastY","setup","parentDiv","document","getElementById","createCanvas","clientWidth","frameRate","strokeWeight","noFill","background","mousePressed","mouseX","mouseY","mouseReleased","touchMoved","line","draw","clear","getSignatureData","toDataURL","myImage","Image","crossOrigin","isLoading","canvas","getElementsByTagName","context","getContext","onload","drawImage","croppedImageData","removeImageBlanks","console","log","signature","imageObject","imgWidth","imgHeight","createElement","setAttribute","imageData","getImageData","getRBG","x","y","offset","red","green","blue","opacity","isWhite","rgb","scanY","fromTop","Math","min","scanX","fromLeft","cropTop","cropBottom","cropLeft","cropRight","cropWidth","cropHeight","mounted","__exports__","render"],"sourceRoot":""}